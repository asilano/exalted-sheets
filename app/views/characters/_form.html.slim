= javascript_pack_tag 'characters'
= form_with(model: character, local: true) do |form|
  - if character.errors.any?
    #error_explanation
      h2
        = pluralize(character.errors.count, "error")
        |  prohibited this character from being saved:
      ul
        - character.errors.full_messages.each do |message|
          li
            = message
  .character-sheet
    .sheet-col.logo
      = form.select :spark, Character.sparks.map { |key, value| [t(".#{key}"), key] }
    .sheet-col.top-fields
      = form.hidden_field :discord_user
      .field
        = form.label :name
        = form.text_field :name
      .field
        = form.label :player_name
        = form.text_field :player_name
      .field
        = form.label :caste, t(".caste.#{form.object.spark || 'solar'}"),
                             data: { spark: { solar: t('.caste.solar'), dragon_blooded: t('.caste.dragon_blooded') } }
        = form.text_field :caste
    .sheet-col.top-fields
      .field
        = form.label :concept
        = form.text_field :concept
      .field
        = form.label :anima
        = form.text_field :anima
      .field class=('hidden' unless form.object.spark == 'solar') data={ 'spark-show' => 'solar' }
        = form.label :supernal
        = form.text_field :supernal
      .field class=('hidden' unless form.object.spark == 'dragon_blooded') data={ 'spark-show' => 'dragon_blooded' }
        = form.label :lineage
        = form.text_field :lineage
    .header-bar.full-width
      span Attributes
    .sheet-col.attributes
      .field
        = form.label :strength
        = form.number_field :strength
      .field
        = form.label :dexterity
        = form.number_field :dexterity
      .field
        = form.label :stamina
        = form.number_field :stamina
    .sheet-col.attributes
      .field
        = form.label :charisma
        = form.number_field :charisma
      .field
        = form.label :manipulation
        = form.number_field :manipulation
      .field
        = form.label :appearance
        = form.number_field :appearance
    .sheet-col.attributes
      .field
        = form.label :perception
        = form.number_field :perception
      .field
        = form.label :intelligence
        = form.number_field :intelligence
      .field
        = form.label :wits
        = form.number_field :wits
    .header-bar
      span Abilities
    .header-bar
      span Specialties
    .header-bar
      span Merits
    .sheet-col.abilities
      .spacer:.favoured Fvd
      - Character::ABILITIES.each do |abil|
        .field
          .favoured
            = form.check_box "favoured_#{abil}"
          = form.label abil
          = form.number_field abil
    .sheet-col.cocooned
      .spacer
      = form.fields_for :specialties do |sf|
        = render 'specialty_fields', f: sf
      .cocoon-links
        = link_to_add_association form, :specialties do
          = inline_svg_tag('plus.svg')
    .sheet-col.cocooned
      .spacer
      = form.fields_for :merits do |mf|
        = render 'merit_fields', f: mf
      .cocoon-links
        = link_to_add_association form, :merits do
          = inline_svg_tag('plus.svg')
    .header-bar
      span Willpower
    .header-bar
      span Limit break
    .sheet-col
      .centred
        = form.label :remaining_wp, t('.remaining_wp')
        span
          => '/'
        = form.label :permanent_wp, t('.permanent_wp')
      .field.centred
        = form.number_field :remaining_wp
        span
          => ' /'
        = form.number_field :permanent_wp
    .sheet-col
      .centred
        = form.label :limit_break
      .field.centred
        = form.number_field :limit_break
    .header-bar
      span Essence
    .header-bar
      span Limit trigger
    .sheet-col
      .centred
        = form.label :permanent_ess, t('.permanent_ess')
      .field.centred
        = form.number_field :permanent_ess, data: { recalc: true }
      .centred
        = form.label :remaining_personal_ess, t('.remaining_personal_ess')
        span
          => '/'
        span
          | Pool
      .field.centred
        = form.number_field :remaining_personal_ess
        span
          => ' /'
        = form.number_field :personal_pool, disabled: true, data: { 'spark-fn' => 'personal_pool' }
        span.pool-name Personal
      .field.centred
        = form.number_field :remaining_periph_ess
        span
          => ' /'
        = form.number_field :periph_pool, disabled: true, data: { 'spark-fn' => 'periph_pool' }
        span.pool-name Peripheral
      .field.centred
        = form.label :committed_ess, t('.committed_ess')
        = form.number_field :committed_ess
    .sheet-col
      .centred
        = form.label :limit_trigger
      .field.centred
        = form.text_area :limit_trigger, cols: 40, rows: 10
    .header-bar
      span Experience
    .header-bar
      span data=({ spark: %Q({ "solar": "#{t('.solar')} experience", "dragon_blooded": "#{t('.dragon_blooded')} experience" }) })
        = t(".#{form.object.spark}") + " experience"
    .sheet-col
      .field
        = form.label :unspent_xp, 'Unspent'
        = form.number_field :unspent_xp
        = form.label :total_xp, 'Total'
        = form.number_field :total_xp
    .sheet-col
      .field
        = form.label :unspent_spark_xp, 'Unspent'
        = form.number_field :unspent_spark_xp
        = form.label :total_spark_xp, 'Total'
        = form.number_field :total_spark_xp
    .header-bar.span-2
      span Weapons
    .sheet-col.span-2.cocooned
      .table
        .table-row
          .table-head Wield
          .table-head Name
          .table-head Acc.
          .table-head Dmg.
          .table-head Def.
          .table-head Ovw.
          .table-head Tags
          .table-head Pool
          .table-head
        = form.fields_for :weapons do |wf|
          = render 'weapon_fields', f: wf
        .cocoon-links
          = link_to_add_association form, :weapons do
            = inline_svg_tag('plus.svg')
    .header-bar.full-width
      span Health &amp; Defense
    .sheet-col.span-2.cocooned
      .table
        .table-row
          .table-head Name
          .table-head Soak
          .table-head Hardness
          .table-head Mob. Pen.
          .table-head Tags
          .table-head
        = form.fields_for :armours do |af|
          = render 'armour_fields', f: af
        .cocoon-links
          = link_to_add_association form, :armours do
            = inline_svg_tag('plus.svg')
    .sheet-col.split-2
      .sheet-col
        span.label> Parry:
        span= form.object.parry
      .sheet-col
        span.label> Resolve:
        span= form.object.resolve
      .sheet-col
        span.label> Evasion:
        span= form.object.evasion
      .sheet-col
        span.label> Guile:
        span= form.object.guile
      .sheet-col
        span.label> Rush:
        span= "#{form.object.rush}d"
      .sheet-col
        span.label> Disengage:
        span= "#{form.object.disengage}d"
      .sheet-col
        span.label> Join Battle:
        span= "#{form.object.join_battle}d"

    .sheet-col.span-2
      span.label> Natural Soak:
      span data=({ "inner-html" => "nat_soak" }) = form.object.stamina
      span.label> Total Soak:
      span data=({ "inner-html" => "soak" }) = form.object.soak
    .sheet-col
    .sheet-col.full-width
      .label Health Levels
      = form.fields_for :health_levels do |hlf|
        span.small-num = hlf.number_field :penalty

    .header-bar.full-width
      span Intimacies
    .sheet-col.full-width.cocooned
      .table
        .table-row
          .table-head Type
          .table-head Intimacy
          .table-head Intensity
          .table-head
        = form.fields_for :intimacies do |af|
          = render 'intimacy_fields', f: af
        .cocoon-links
          = link_to_add_association form, :intimacies do
            = inline_svg_tag('plus.svg')

    .header-bar.full-width
      span Charms
    .sheet-col.full-width.cocooned
      .table
        .table-row
          .table-head Name
          .table-head Ability
          .table-head Type
          .table-head Duration
          .table-head Cost
          .table-head Keywords
          .table-head Effect
          .table-head
        = form.fields_for :charms do |af|
          = render 'charm_fields', f: af
        .cocoon-links
          = link_to_add_association form, :charms do
            = inline_svg_tag('plus.svg')

  .actions
    = form.submit
